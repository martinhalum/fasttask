// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavButtons should render NavButtons component with no buttons when onLeftPress and onRightPress are not provided 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "justifyContent": "space-between",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": undefined,
            "fontSize": 18,
          },
          undefined,
          {
            "fontFamily": "FontAwesome5Free-Solid",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {
            "fontWeight": "900",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": undefined,
            "fontSize": 18,
          },
          undefined,
          {
            "fontFamily": "FontAwesome5Free-Regular",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {
            "fontWeight": "400",
          },
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`NavButtons should render NavButtons component with only left button when onRightPress is not provided 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "justifyContent": "space-between",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": undefined,
            "fontSize": 18,
          },
          undefined,
          {
            "fontFamily": "FontAwesome5Free-Solid",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {
            "fontWeight": "900",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": undefined,
            "fontSize": 18,
          },
          undefined,
          {
            "fontFamily": "FontAwesome5Free-Regular",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {
            "fontWeight": "400",
          },
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;
