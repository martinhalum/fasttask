// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button should render Button with default props 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D9D9D9",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": undefined,
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a Button with a long label and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D9D9D9",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": undefined,
      }
    }
  >
    This is a very long label for the button
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a Button with an invalid type and label 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D9D9D9",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": undefined,
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a FilledButton with custom color, label, and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "red",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": undefined,
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a FilledButton with left alignment, label, and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D9D9D9",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <Text
    style={
      {
        "color": undefined,
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a FilledButton with left alignment, left icon, right icon, custom color, text color, and disabled state 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "red",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <Text
    style={
      {
        "color": "white",
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": undefined,
            "fontSize": 15,
          },
          {
            "color": "white",
          },
          {
            "fontFamily": "FontAwesome5Free-Regular",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {
            "fontWeight": "400",
          },
        ]
      }
    >
      ?
    </Text>
  </View>
</View>
`;

exports[`Button should render a FilledButton with left alignment, left icon, right icon, custom color, text color, and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "custom-color",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <Text
    style={
      {
        "color": "text-color",
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": undefined,
            "fontSize": 15,
          },
          {
            "color": "text-color",
          },
          {
            "fontFamily": "FontAwesome5Free-Regular",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {
            "fontWeight": "400",
          },
        ]
      }
    >
      ?
    </Text>
  </View>
</View>
`;

exports[`Button should render a FilledButton with left icon, label, and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#448AFF",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "#D9D9D9",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": undefined,
            "fontSize": 12,
          },
          undefined,
          {
            "fontFamily": "FontAwesome5Free-Regular",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {
            "fontWeight": "400",
          },
        ]
      }
    >
      ?
    </Text>
  </View>
  <Text
    style={
      {
        "color": undefined,
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a FilledButton with no label and no onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D9D9D9",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": undefined,
      }
    }
  />
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a FilledButton with no label and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D9D9D9",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": undefined,
      }
    }
  />
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a FilledButton with no onPress function and label 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#448AFF",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": undefined,
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a FilledButton with right icon, label, and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#448AFF",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": undefined,
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": undefined,
            "fontSize": 15,
          },
          {
            "color": undefined,
          },
          {
            "fontFamily": "FontAwesome5Free-Regular",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {
            "fontWeight": "400",
          },
        ]
      }
    >
      ?
    </Text>
  </View>
</View>
`;

exports[`Button should render a FilledButton with text color, label, and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#448AFF",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": "red",
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a disabled FilledButton with label 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D9D9D9",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": undefined,
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a primary FilledButton with label and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#448AFF",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": undefined,
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a secondary FilledButton with label and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D9D9D9",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "width": 30,
        },
        {
          "backgroundColor": "transparent",
        },
      ]
    }
  />
  <Text
    style={
      {
        "color": undefined,
      }
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
        "width": 30,
      }
    }
  />
</View>
`;

exports[`Button should render a submit Button with label and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#00E676",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "center",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <Text
    style={
      {
        "color": "#000000",
        "fontSize": 18,
        "fontWeight": "600",
      }
    }
  >
    Test
  </Text>
</View>
`;

exports[`Button should render an OutlinedButton with custom color, text color, and disabled state 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#000000",
      "borderRadius": 8,
      "borderWidth": 0.5,
      "flexDirection": "row",
      "justifyContent": "center",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <Text
    style={
      {
        "color": "#000000",
      }
    }
  >
    Test
  </Text>
</View>
`;

exports[`Button should render an OutlinedButton with custom color, text color, and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#000000",
      "borderRadius": 8,
      "borderWidth": 0.5,
      "flexDirection": "row",
      "justifyContent": "center",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <Text
    style={
      {
        "color": "#000000",
      }
    }
  >
    Test
  </Text>
</View>
`;

exports[`Button should render an OutlinedButton with no label and no onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#000000",
      "borderRadius": 8,
      "borderWidth": 0.5,
      "flexDirection": "row",
      "justifyContent": "center",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <Text
    style={
      {
        "color": "#000000",
      }
    }
  />
</View>
`;

exports[`Button should render an OutlinedButton with no label and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#000000",
      "borderRadius": 8,
      "borderWidth": 0.5,
      "flexDirection": "row",
      "justifyContent": "center",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <Text
    style={
      {
        "color": "#000000",
      }
    }
  />
</View>
`;

exports[`Button should render an OutlinedButton with no onPress function and label 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#000000",
      "borderRadius": 8,
      "borderWidth": 0.5,
      "flexDirection": "row",
      "justifyContent": "center",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <Text
    style={
      {
        "color": "#000000",
      }
    }
  >
    Test
  </Text>
</View>
`;

exports[`Button should render an outlined Button with label and onPress function 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#000000",
      "borderRadius": 8,
      "borderWidth": 0.5,
      "flexDirection": "row",
      "justifyContent": "center",
      "minHeight": 52,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <Text
    style={
      {
        "color": "#000000",
      }
    }
  >
    Test
  </Text>
</View>
`;
